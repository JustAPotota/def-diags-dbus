function init(self)
	msg.post(".", "acquire_input_focus")
	if diags then
		print("diags.ERROR: " .. tostring(diags.ERROR))
		print("diags.OKAY: " .. tostring(diags.OKAY))
		print("diags.CANCEL: " .. tostring(diags.CANCEL))
	end
end

local function show_result(status, ...)
	local paths = {...}

	local node = gui.get_node("result")
	if status == diags.ERROR then
		gui.set_color(node, vmath.vector4(0.9, 0.2, 0.2, 1))
		gui.set_text(node, "Error")
	elseif status == diags.CANCEL then
		gui.set_color(node, vmath.vector4(1, 0.6, 0, 1))
		gui.set_text(node, "Cancelled")
	elseif status == diags.OKAY then
		gui.set_color(node, vmath.vector4(1))
		local text = ""
		for _,path in ipairs(paths) do
			text = text .. path .. "\n"
		end
		gui.set_text(node, text)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released and diags then
		
		local hit_open = gui.pick_node(gui.get_node("open"), action.x, action.y)
		local hit_save = gui.pick_node(gui.get_node("save"), action.x, action.y)
		local hit_open_multiple = gui.pick_node(gui.get_node("open_multiple"), action.x, action.y)
		local hit_open_folder = gui.pick_node(gui.get_node("open_folder"), action.x, action.y)
		if hit_open then
			local status, path = diags.open()
			show_result(status, path)
			print("diags.open:", status, path)
		elseif hit_save then
			print("diags.save:", diags.save())
		elseif hit_open_multiple then
			local r, t = diags.open_multiple()
			print("diags.open_multiple:", r)
			pprint(t)
		elseif hit_open_folder then
			print("diags.open_folder:", diags.open_folder())
		end

	end
end
